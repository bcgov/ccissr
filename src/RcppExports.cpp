// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// ModelDir
NumericVector ModelDir(NumericMatrix x, NumericVector Curr, std::string dir);
RcppExport SEXP _ccissr_ModelDir(SEXP xSEXP, SEXP CurrSEXP, SEXP dirSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Curr(CurrSEXP);
    Rcpp::traits::input_parameter< std::string >::type dir(dirSEXP);
    rcpp_result_gen = Rcpp::wrap(ModelDir(x, Curr, dir));
    return rcpp_result_gen;
END_RCPP
}
// gs2gw
NumericVector gs2gw(NumericVector x, double a, double b);
RcppExport SEXP _ccissr_gs2gw(SEXP xSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(gs2gw(x, a, b));
    return rcpp_result_gen;
END_RCPP
}
// SimGrowth
NumericVector SimGrowth(DataFrame DF, double cmdMin, double cmdMax, double tempMin, double tempMax, double climLoss);
RcppExport SEXP _ccissr_SimGrowth(SEXP DFSEXP, SEXP cmdMinSEXP, SEXP cmdMaxSEXP, SEXP tempMinSEXP, SEXP tempMaxSEXP, SEXP climLossSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type DF(DFSEXP);
    Rcpp::traits::input_parameter< double >::type cmdMin(cmdMinSEXP);
    Rcpp::traits::input_parameter< double >::type cmdMax(cmdMaxSEXP);
    Rcpp::traits::input_parameter< double >::type tempMin(tempMinSEXP);
    Rcpp::traits::input_parameter< double >::type tempMax(tempMaxSEXP);
    Rcpp::traits::input_parameter< double >::type climLoss(climLossSEXP);
    rcpp_result_gen = Rcpp::wrap(SimGrowth(DF, cmdMin, cmdMax, tempMin, tempMax, climLoss));
    return rcpp_result_gen;
END_RCPP
}
// combCurr
NumericVector combCurr(NumericMatrix dat, float wt);
RcppExport SEXP _ccissr_combCurr(SEXP datSEXP, SEXP wtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< float >::type wt(wtSEXP);
    rcpp_result_gen = Rcpp::wrap(combCurr(dat, wt));
    return rcpp_result_gen;
END_RCPP
}
// NewSuitNoCurr
NumericVector NewSuitNoCurr(NumericMatrix x, NumericVector vals);
RcppExport SEXP _ccissr_NewSuitNoCurr(SEXP xSEXP, SEXP valsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vals(valsSEXP);
    rcpp_result_gen = Rcpp::wrap(NewSuitNoCurr(x, vals));
    return rcpp_result_gen;
END_RCPP
}
// FeasSuit
NumericVector FeasSuit(NumericMatrix x, IntegerVector Curr, NumericVector vals, NumericVector CurrAdj);
RcppExport SEXP _ccissr_FeasSuit(SEXP xSEXP, SEXP CurrSEXP, SEXP valsSEXP, SEXP CurrAdjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Curr(CurrSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type CurrAdj(CurrAdjSEXP);
    rcpp_result_gen = Rcpp::wrap(FeasSuit(x, Curr, vals, CurrAdj));
    return rcpp_result_gen;
END_RCPP
}
// stepDiff
NumericVector stepDiff(IntegerVector Year, NumericVector NewSuit, NumericVector Curr);
RcppExport SEXP _ccissr_stepDiff(SEXP YearSEXP, SEXP NewSuitSEXP, SEXP CurrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type Year(YearSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type NewSuit(NewSuitSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Curr(CurrSEXP);
    rcpp_result_gen = Rcpp::wrap(stepDiff(Year, NewSuit, Curr));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ccissr_ModelDir", (DL_FUNC) &_ccissr_ModelDir, 3},
    {"_ccissr_gs2gw", (DL_FUNC) &_ccissr_gs2gw, 3},
    {"_ccissr_SimGrowth", (DL_FUNC) &_ccissr_SimGrowth, 6},
    {"_ccissr_combCurr", (DL_FUNC) &_ccissr_combCurr, 2},
    {"_ccissr_NewSuitNoCurr", (DL_FUNC) &_ccissr_NewSuitNoCurr, 2},
    {"_ccissr_FeasSuit", (DL_FUNC) &_ccissr_FeasSuit, 4},
    {"_ccissr_stepDiff", (DL_FUNC) &_ccissr_stepDiff, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_ccissr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
